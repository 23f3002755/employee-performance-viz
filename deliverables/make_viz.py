# Email for verification: 23f3002755@ds.study.iitm.ac.in

import os
import io
import base64
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

def html_escape(s: str) -> str:
    return s.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;")

def generate_employee_df(n=100, seed=42):
    rng = np.random.default_rng(seed)
    departments = ["Sales", "Engineering", "Marketing", "HR", "Finance", "Support"]
    regions = ["North", "South", "East", "West"]
    dept_probs = np.array([0.28, 0.25, 0.15, 0.10, 0.12, 0.10])
    dept_probs = dept_probs / dept_probs.sum()
    rows = []
    for i in range(n):
        dept = rng.choice(departments, p=dept_probs)
        region = rng.choice(regions)
        perf = float(np.clip(rng.normal(loc=4.0, scale=0.5), 1.0, 5.0))
        rows.append({"EmployeeID": i + 1, "Department": dept, "Region": region, "PerformanceScore": perf})
    return pd.DataFrame(rows)

def plot_department_histogram(df):
    sns.set_style("whitegrid")
    sns.set_context("talk", font_scale=1.0)
    order = df["Department"].value_counts().index.tolist()
    fig, ax = plt.subplots(figsize=(8, 6), dpi=96)
    # Future seaborn compatibility: use hue=x, legend=False for same effect
    sns.countplot(data=df, x="Department", hue="Department", order=order, palette="deep", ax=ax, legend=False)
    ax.set_title(f"Department Distribution (n={len(df)})")
    ax.set_xlabel("Department")
    ax.set_ylabel("Count")
    ax.tick_params(axis="x", rotation=15)
    plt.tight_layout()
    buf = io.BytesIO()
    fig.savefig(buf, format="png")
    plt.close(fig)
    buf.seek(0)
    return base64.b64encode(buf.read()).decode("ascii")

def write_html(output_path, img_b64, sales_count, src_code):
    code_html = html_escape(src_code)
    html = f"""<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Employee Department Distribution</title>
  <meta name="author" content="23f3002755@ds.study.iitm.ac.in">
  <style>
    body {{ font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; margin: 24px; }}
    h1 {{ margin-bottom: 8px; }}
    .meta {{ color: #475569; margin-bottom: 16px; }}
    .figure {{ text-align: center; margin-top: 18px; }}
    .caption {{ color: #475569; font-size: 14px; margin-top: 8px; }}
    pre {{ background:#f8fafc; padding:12px; border:1px solid #e5e7eb; border-radius:6px; overflow:auto; }}
    code {{ font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", monospace; font-size: 13px; }}
    details {{ margin-top: 20px; }}
  </style>
</head>
<body>
  <h1>Employee Department Distribution</h1>
  <div class="meta">
    Email: <strong>23f3002755@ds.study.iitm.ac.in</strong><br>
    Sales department frequency: <strong>{sales_count}</strong>
  </div>
  <div>Generated by Python + Seaborn; the figure is embedded as base64.</div>
  <div class="figure">
    <img alt="Department histogram" src="data:image/png;base64,{img_b64}">
    <div class="caption">Histogram (count plot) of department distribution across 100 employees.</div>
  </div>

  <details open>
    <summary><strong>Python code used to generate this visualization</strong></summary>
    <pre><code class="language-python">{code_html}</code></pre>
  </details>
</body>
</html>
"""
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    with open(output_path, "w", encoding="utf-8") as f:
        f.write(html)

def main():
    df = generate_employee_df(n=100, seed=23)
    sales_count = int((df["Department"] == "Sales").sum())
    print("Sales department frequency:", sales_count)

    img_b64 = plot_department_histogram(df)
    try:
        with open(__file__, "r", encoding="utf-8") as f:
            src = f.read()
    except Exception:
        src = "# Source unavailable"
    output_html = "deliverables/employee_perf_hist.html"
    write_html(output_html, img_b64, sales_count, src)
    print("Wrote:", output_html)

if __name__ == "__main__":
    main()
